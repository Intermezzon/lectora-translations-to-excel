<?php
require 'vendor/autoload.php';
require 'helpers.php';

if (isset($_FILES["convertfile"])) {
	$file = $_FILES["convertfile"]["tmp_name"];
	$fileName = $_FILES["convertfile"]["name"];
	$fileInfo = pathinfo($_FILES["convertfile"]["name"]);
	$fileType = strtolower($fileInfo['extension']);

	if (in_array($fileType, ['xlsx', 'xls'])) {
		///////////////////////////////////////////////////////////////
		// Convert to HTML
		header('Content-Description: File Transfer');
		header('Content-Type: application/octet-stream');
		header('Content-Disposition: attachment; filename="' . $fileInfo['filename'] . '-translated.html"'); 
		header('Content-Transfer-Encoding: binary');

		$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader('Xlsx');
		$reader->setReadDataOnly(TRUE);
		$spreadsheet = $reader->load($file);
		$sheet = $spreadsheet->getActiveSheet();

		$out = [];
		$row = 2;
		while (true) {
			if (!($line = $sheet->getCellByColumnAndRow(1, $row)->getValue())) {
				break;
			}
			$internal = $sheet->getCellByColumnAndRow(2, $row)->getValue();

			$out[$internal] = [
				'line' => $line,
				'pre' => $sheet->getCellByColumnAndRow(3, $row)->getValue(),
				'post' => $sheet->getCellByColumnAndRow(4, $row)->getValue(),
				'master' => $sheet->getCellByColumnAndRow(5, $row)->getValue(),
				'translation' => $sheet->getCellByColumnAndRow(6, $row)->getValue(),
			];

			$row++;
		}

		// Output html

		ksort($out);
		echo "#
#
# Editing guidelines:
# 1. Edit this file with a text editor like Notepad++ http://notepad-plus-plus.org/
#    - notepad++ with language set to HTML will show translation text inside HTML as black
# 2. DO NOT edit this file with MS Word, Wordpad, or a HTML WYSIWYG editor it may corrupt the format
# 3. Save the file with UTF-8 encoding ( without BOM if you have the option ).
# 4. Keep the end of line (line feed) character, ensure your editor inserts the same.
#
#
";
		$lastLine = '';
		foreach ($out as $info) {
			if ($lastLine != $info['line']) {
				echo "\n##~~Do not edit this line." . $info['line'] . "~~##\n";
				$lastLine = $info['line'];
			}
			echo $info['pre'] . ($info['translation']) . $info['post'];
		}
		exit();

	}

	if (in_array($fileType, ['html', 'htm'])) {
		///////////////////////////////////////////////////////////////
		// Convert to EXCEL
		header('Content-Description: File Transfer');
		header('Content-Type: application/octet-stream');
		header('Content-Disposition: attachment; filename="' . $fileInfo['filename'] . '-translated.xlsx"'); 
		header('Content-Transfer-Encoding: binary');
		$lines = preg_split('/\n##~~Do not edit this line\.([0-9.]+)~~##\n/', file_get_contents($file), -1, PREG_SPLIT_DELIM_CAPTURE);

		// Remove first comment
		array_shift($lines);

		$out = [];
		$x = 0;
		for ($i = 0; $i < count($lines); $i += 2) {
			$line = $lines[$i];
			$content = splitHTML($lines[$i + 1]);

			for ($j = 0; $j < count($content); $j++) {
				$c = $content[$j];
				$data = [
					'line' => $line,
					'internal' => $x++,
					'pre' => '',
					'post' => '',
					'master' => '',
					'translation' => '',
				];

				if (substr($c, 0, 1) == '<') {
					$data['pre'] = $c;
					$j++;
					if ($j >= count($content)) {
						break;
					}
					$c = $content[$j];
				}

				$data['master'] = html_entity_decode($c, ENT_COMPAT | ENT_HTML401, "UTF-8");

				if (count($content)>$j+1 && substr($content[$j+1], 0, 1) == '<') {
					$data['post'] = $content[$j+1];
					$j++;
				}
				$out[] = $data;
			}

		}

		// Write excel

		$spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
		$sheet = $spreadsheet->getActiveSheet();
		$line = 2;

		$sheet->setCellValue('A1', 'Line');
		$sheet->setCellValue('B1', 'Intern rad');
		$sheet->setCellValue('C1', 'Pre-html');
		$sheet->setCellValue('D1', 'Post-html');
		$sheet->setCellValue('E1', 'Master');
		$sheet->setCellValue('F1', 'Översättning');

		foreach ($out as $o) {
			$sheet->setCellValueExplicit('A' . $line, $o['line'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
			$sheet->setCellValueExplicit('B' . $line, $o['internal'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
			$sheet->setCellValueExplicit('C' . $line, $o['pre'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
			$sheet->setCellValueExplicit('D' . $line, $o['post'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
			$sheet->setCellValueExplicit('E' . $line, $o['master'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
			$sheet->setCellValueExplicit('F' . $line, $o['translation'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
			$line++;
		} 

		$sheet->setAutoFilter('A1:F' . ($line - 1));

		$writer = new \PhpOffice\PhpSpreadsheet\Writer\Xlsx($spreadsheet);
		$writer->save('php://output');
		exit();
	}
}

?>
<!DOCTYPE html>
<html>
<head>
	<title>Översättning Lectora</title>
</head>
<body>
<form method="POST" enctype="multipart/form-data">
	<div>
		<label>
			Ladda upp fil för konvertering 
			<input type="file" name="convertfile">
		</label>
	</div>
	<div>
		<button type="submit">Konvertera</button>
	</div>
</form>
</body>
</html>